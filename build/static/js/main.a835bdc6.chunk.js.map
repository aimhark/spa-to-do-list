{"version":3,"sources":["Components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoList","props","useState","input","setInput","todoList","setTodoList","edited","setEdited","edit","setEdit","removeTask","e","value","target","parentElement","previousElementSibling","filter","item","console","log","doneTask","style","textDecoration","editTask","className","onSubmit","preventDefault","length","type","placeholder","onChange","id","map","onClick","title","Math","random","App","TodoList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAmFeA,MA7Ef,SAAkBC,GAChB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAwBN,oBAAS,GAAjC,mBAAOO,EAAP,KAAaC,EAAb,KAiBMC,EAAa,SAACC,GAClB,IAAIC,EAAQD,EAAEE,OAAOC,cAAcC,uBAAuBH,MAC1DP,EAAYD,EAASY,QAAO,SAAAC,GAAI,OAAIA,IAASL,MAC7CM,QAAQC,IAAIf,IAERgB,EAAW,SAACT,GAChBA,EAAEE,OAAOC,cAAcC,uBAAuBM,MAAMC,eAAiB,gBAEjEC,EAAW,SAACZ,GAChBF,GAAQ,GACRN,EAASQ,EAAEE,OAAOC,cAAcC,uBAAuBH,QAoBzD,OAEE,qBAAKY,UAAU,WAAf,SACE,sBAAKA,UAAU,WAAf,UACE,uBAAMA,UAAU,WAAUC,SA3Cf,SAACd,GAChBA,EAAEe,iBACExB,EAAMyB,SAERtB,GAAY,SAAAD,GAAQ,4BAAQA,GAAR,CAAkBF,OACtCC,EAAS,KAEXe,QAAQC,IAAIf,IAoCR,UACE,uBAAOwB,KAAK,OAAOC,YAAY,SAASC,SAnD5B,SAACnB,GACU,IAA1BA,EAAEE,OAAOD,MAAMe,QAEhBxB,EAASQ,EAAEE,OAAOD,OAEpBM,QAAQC,IAAIjB,IA8CyDU,MAAOV,EAAO6B,GAAG,cAChF,uBAAOH,KAAK,SAAShB,MAAM,WAAWY,UAAU,cAEjDhB,EAAQ,uBAAMgB,UAAU,YAAWC,SAfzB,SAACd,GAChBA,EAAEe,iBACFrB,EAAYD,EAAS4B,KAAI,SAAAf,GAAI,OAAIA,IAASf,EAAQI,EAASW,MAC3DV,EAAU,IACVJ,EAAS,IACTM,GAAQ,IAUK,UACP,uBAAOmB,KAAK,OAAOC,YAAY,yBAAyBC,SAxB7C,SAACnB,GACW,IAA1BA,EAAEE,OAAOD,MAAMe,QAEhBpB,EAAUI,EAAEE,OAAOD,OAErBM,QAAQC,IAAIb,GACZY,QAAQC,IAAIjB,IAkBwEU,MAAON,IACrF,uBAAOsB,KAAK,SAAShB,MAAM,iBAClB,GACVR,EAAS4B,KAAI,SAAAf,GAAO,OACnB,uBAAMO,UAAU,OAAhB,UACE,uBAAOI,KAAK,OAAOhB,MAAOK,IAC1B,sBAAKO,UAAU,QAAf,UACE,mBAAGA,UAAU,sBAAsBS,QAASvB,EAAYwB,MAAM,WAC9D,mBAAGV,UAAU,sBAAsBS,QAASb,EAAUc,MAAM,SAC5D,mBAAGV,UAAU,cAAcS,QAASV,EAAUW,MAAM,cAL5BC,KAAKC,mB,MC1D5BC,MARf,WACE,OACE,qBAAKb,UAAU,MAAf,SACE,cAACc,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,4CACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a835bdc6.chunk.js","sourcesContent":["\nimport React, {useState} from 'react'\nimport './ToDoList.css'\nimport '@fortawesome/fontawesome-free/css/all.css'\n\n\nfunction ToDoList(props) {\n  const [input, setInput] = useState(\"\")\n  const [todoList, setTodoList] = useState([])\n  const [edited, setEdited] = useState(\"\")\n  const [edit, setEdit] = useState(false)\n  const handleInput = (e) => {\n    if(e.target.value.length === 0){}\n    else{\n      setInput(e.target.value)\n    }\n    console.log(input);\n  }\n  const addItems = (e) => {\n    e.preventDefault()\n    if(!input.length){}\n    else{\n      setTodoList(todoList => [...todoList, input]);\n      setInput(\"\")\n    }\n    console.log(todoList);\n  }\n  const removeTask = (e) => {\n    let value = e.target.parentElement.previousElementSibling.value\n    setTodoList(todoList.filter(item => item !== value))\n    console.log(todoList);\n  }\n  const doneTask = (e) => {\n    e.target.parentElement.previousElementSibling.style.textDecoration = \"line-through\"\n  }\n  const editTask = (e) => {\n    setEdit(true)\n    setInput(e.target.parentElement.previousElementSibling.value)\n    // e.target.parentElement.previousElementSibling\n    // setTodoList(todoList.map(item => item === value ? ))\n    // console.log(e.target.parentElement.previousElementSibling);\n  }\n  const handleEdit = (e) => {\n    if(e.target.value.length === 0){}\n    else{\n      setEdited(e.target.value)\n    }\n    console.log(edited);\n    console.log(input);\n  }\n  const editItem = (e) => {\n    e.preventDefault()\n    setTodoList(todoList.map(item => item === input ? edited : item))\n    setEdited(\"\")\n    setInput(\"\")\n    setEdit(false)\n  }\n  return (\n    \n    <div className=\"ToDoList\">\n      <div className=\"mainTodo\">\n        <form className=\"addItems\"onSubmit={addItems}>\n          <input type=\"text\" placeholder=\"To dos\" onChange={handleInput} value={input} id='inputTask'/>\n          <input type=\"submit\" value=\"add task\" className='submit'></input>\n        </form>\n        {edit ? (<form className=\"editItems\"onSubmit={editItem}>\n          <input type=\"text\" placeholder=\"...edit your task here\" onChange={handleEdit} value={edited}/>\n          <input type=\"submit\" value=\"edit task\"></input>\n        </form>) : \"\"}\n        {todoList.map(item=>{return (\n          <form className=\"task\" key={Math.random()}>\n            <input type=\"text\" value={item}></input>\n            <div className=\"icons\">\n              <i className=\"far fa-minus-square\" onClick={removeTask} title=\"delete\"></i>\n              <i className=\"far fa-check-square\" onClick={doneTask} title=\"done\"></i>\n              <i className=\"far fa-edit\" onClick={editTask} title=\"edit\"></i>\n            </div>\n          </form>\n        )})}\n      </div>\n    </div>\n  )\n}\nexport default ToDoList\n\n// Dalibor showed me how to import fontawesome","import React from 'react';\nimport TodoList from './Components/TodoList'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <h1>To-do list</h1>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}